// args: --run

def main(){
	n:=5;
	a:=(1,1,1,1,0) coerce 𝔹^n;
	i:=4,j:=2;
	with{
		if i<j { (u coerce 𝔹^i)~(tmp0,)~(v coerce 𝔹^(j sub (i+1)))~(tmp1,)~(w coerce 𝔹^(n sub (j+1))) := a; }
		else { (u coerce 𝔹^j)~(tmp0,)~(v coerce 𝔹^(i sub (j+1)))~(tmp1,)~(w coerce 𝔹^(n sub (i+1))) := a; }
	} do {
		(tmp0,tmp1):=(tmp1,tmp0);
	}
	with a[0]:=H(a[0]) do {
		if a[0] { with x:=H(1:𝔹) do x:=X(x); }
	}
	assert(measure(a=(0,1,0,1,1)));
	return a coerce 𝔹^5;
}
