// args: --run
n:=8;
def approx(a:!ℝ,b:!ℝ)⇒abs(a-b)≤1.0e-10;
def main(){
	a:=13:!uint[n];
	b:=-17:!int[n];
	c:=23:!ℕ;
	d:=-29:!ℤ;
	e:=5/3:!ℚ;
	f:=-7/5:!ℚ;
	g:=0.137:!ℝ;
	h:=-1.37:!ℝ;
	assert(a%a=0);
	assert((a as !𝔹^n as !int[n])%b=-4);
	assert(a%c=13);
	assert((a as !ℕ)%d=-16);
	assert((a as !ℕ)%e=4/3);
	assert((a as !ℕ)%f=-1);
	assert(approx((a as !ℕ)%g,0.122));
	assert(approx((a as !ℕ)%h,-0.7));
	assert((b as !ℤ)%(a as !ℕ)=9);
	assert(b%b=0);
	assert(b%c=6);
	assert(b%d=-17);
	assert((b as !ℤ)%e=4/3);
	assert((b as !ℤ)%f=-1/5);
	assert(approx((b as !ℤ)%g,0.125));
	assert(approx((b as !ℤ)%h,-0.56));
	assert(c%a=10);
	assert(c%b=-11);
	assert(c%c=0);
	assert(c%d=-6);
	assert(c%e=4/3);
	assert(c%f=-4/5);
	assert(approx(c%g,0.121));
	assert(approx(c%h,-0.29));
	assert(d%a=10);
	assert(d%b=-12);
	assert(d%c=17);
	assert(d%d=0);
	assert(d%e=1);
	assert(d%f=-1);
	assert(approx(d%g,0.044));
	assert(approx(d%h,-0.23));
	assert(e%(a as !ℕ)=5/3);
	assert(e%(b as !ℤ)=-46/3);
	assert(e%c=5/3);
	assert(e%d=-82/3);
	assert(e%e=0);
	assert(e%f=-17/15);
	assert(approx(e%g,17/750));
	assert(approx(e%h,-161/150));
	assert(f%(a as !ℕ)=58/5);
	assert(f%(b as !ℤ)=-7/5);
	assert(f%c=108/5);
	assert(f%d==-7/5);
	assert(f%e=4/15);
	assert(f%f=0);
	assert(approx(f%g,0.107));
	assert(approx(f%h,-0.03));
	assert(approx(g%(a as !ℕ),0.137));
	assert(g%(b as !ℤ)=-16.863);
	assert(approx(g%c,0.137));
	assert(g%d=-28.863);
	assert(g%e=0.137);
	assert(approx(g%f,-1.263));
	assert(g%g=0);
	assert(approx(g%h,-1.233));
	assert(approx(h%(a as !ℕ),11.63));
	assert(approx(h%(b as !ℤ),-1.37));
	assert(approx(h%c,21.63));
	assert(approx(h%d,-1.37));
	assert(approx(h%e,89/300));
	assert(approx(h%f,-1.37));
	assert(h%h=0);
	
	assert(a%true=0);
	assert(b%true=0);
	assert(c%true=0);
	assert(d%true=0);
	assert(e%true=2/3);
	assert(f%true=3/5);
	assert(approx(g%true,0.137));
	assert(approx(h%true,0.63));

	assert(false%a=0);
	assert(false%b=0);
	assert(false%c=0);
	assert(false%d=0);
	assert(false%e=0);
	assert(false%f=0);
	assert(false%g=0);
	assert(false%h=0);

	assert(true%a=1);
	assert(true%b=-16);
	assert(true%c=1);
	assert(true%d=-28);
	assert(true%e=1);
	assert(true%f=-2/5);
	assert(approx(true%g,0.041));
	assert(approx(true%h,-0.37));

	assert(!(false%true));
	assert(!(true%true));
}
