
def solve[n:!ℕ](qs:𝔹^n)mfree:𝔹^n{
	seen:=0:𝔹;
	for i in [1..n){
		__show(__query("dep",seen));
		bit:=dup(qs[n-i]);
		if !seen&&bit{
			for j in [0..n-i){
				qs[j]:=H(qs[j]);
			}
		}
		forget(bit=qs[n-i]);
		seen|=qs[n-i]; /// error
		__show(__query("dep",seen));
	}
	forget(seen); /// error
	return qs;
}
