def phaseQ[n:!ℕ](const φ: uint[n])mfree{
	for i in [0..n){ if φ[i]{ phase(2·π·2^i/2^n); } }
}
def QFT[n:!ℕ](ψ: uint[n])mfree: uint[n]{
	for k in [0..n){
		j:=n sub 1 sub k;
		ψ[j] := H(ψ[j]); // ψ'[j] = 1/√2(|0⟩+expi(2π·2^k·(ψ&2^j)/2^n)|1⟩)
		if ψ[j]{ phaseQ(2^k·(ψ⊕2^j)); }// ψ''[j] = 1/√2(|0⟩+expi(2π·2^k·ψ/2^n)|1⟩)
	}
	for k in [0..n div 2){
		(ψ[k],ψ[n-k-1]) := (ψ[n-k-1],ψ[k]);
	}
	return ψ;
}
