def solve[n:!ℕ](x:𝔹^n, y:𝔹)lifted{
    for half_p in [1..((n-1) div 2)]{ /// warning
        for k in [0..(2*half_p)..n-1]{ /// warning
            for j in [0..half_p-1]{ /// warning
                x[k + j] := X[k + j]; /// error
            }
        }
        if (x == vector(n,1:!𝔹)){
            y := X(y); /// error
        }
        if (x == vector(n,0:!𝔹)){
            y := X(y); /// error
        }
        for k in [0..(2*half_p)..n-1]{ /// warning
            for j in [0..half_p-1]{ /// warning
                x[k + j] := X[k + j]; /// error
            }
        }
    }
    return (x, y);
}
