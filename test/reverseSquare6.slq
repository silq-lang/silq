// args: --run

def f[τ](a:τ)mfree⇒a;
def g[τ](b:𝔹)mfree⇒b;
def h[τ,n:!ℕ](const x:!τ,b:𝔹^n)mfree⇒b;

def k[moved b:𝔹]mfree⇒X(b);

def main(){
	x:=reverse(f);
	y:=reverse(g);
	z:=reverse(h);
	w:=reverse(k);
	r:=(x(0:𝔹),y[!𝔹](1:𝔹),z[!𝔹,2](false,(0:𝔹,0:𝔹)),z[𝔹,3](true,(1:𝔹,1:𝔹,1:𝔹)),k[1:𝔹],w[0:𝔹]);
	assert(measure(r==(0,1,(0,0),(1,1,1),0,1)));
	return r;
}

